{"version":3,"file":"static/js/360.0fa43bdd.chunk.js","mappings":"+MAMaA,EAAS,SAAH,OAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAW,OACzC,SAAC,KAAY,CAACC,QAASD,EAAY,SAChCD,GACY,EAGjBD,EAAOI,UAAY,CACjBH,MAAOI,IAAAA,OACPH,YAAaG,IAAAA,M,uCCVFC,EAAoBC,EAAAA,GAAAA,IAAU,kKAE/BC,EAAAA,GAAAA,SAAAA,OACU,YAAQ,SAALC,MAAkBC,MAAMC,UAAU,IAC/C,gBAAGF,EAAK,EAALA,MAAK,gBAAUG,EAAAA,GAAAA,GAAS,oBAAYH,EAAMC,MAAME,OAAM,GAGvDJ,EAAAA,GAAAA,SAAAA,OAIDK,EAAQN,EAAAA,GAAAA,GAAS,yFACfO,EAAAA,GAAAA,MAKFC,EAAgBR,EAAAA,GAAAA,IAAU,gKAEZS,EAAAA,GAAAA,SAAAA,MAIEA,EAAAA,GAAAA,SAAAA,OAIhBC,EAASV,EAAAA,GAAAA,OAAa,8LACvB,gBAAGE,EAAK,EAALA,MAAK,gBAAUG,EAAAA,GAAAA,GAAS,oBAAYH,EAAMC,MAAME,OAAM,GAClDM,EAAAA,GAAAA,GACJJ,EAAAA,GAAAA,KAKIA,EAAAA,GAAAA,MCvCNK,EAAe,CAC1B,CAACC,GAAI,EAAGC,MAAO,QAASC,KAAM,eAC9B,CAACF,GAAI,EAAGC,MAAO,UAAWC,KAAM,iBAChC,CAACF,GAAI,EAAGC,MAAO,OAAQC,KAAM,e,iBCmD/B,EA5CqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXf,GAAQgB,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAc3B,OACE,UAACtB,EAAiB,CAAC,UAAQ,WAAU,WACnC,SAACO,EAAK,wBACN,UAACE,EAAa,YACZ,SAACf,EAAM,CACLC,MAAM,oBACNC,YAlBkB,WACxBqB,GAASM,EAAAA,EAAAA,MACX,KAkBM,SAAC7B,EAAM,CACLC,MAAK,UAAK0B,EAAS,QAAU,OAAM,YACnCzB,YAdgB,WACtBqB,GAASO,EAAAA,EAAAA,KAAsBH,GACjC,KAcM,SAACV,EAAM,CACLI,MAAOZ,EACPsB,SAtBqB,SAAAC,GAC3BT,GAASU,EAAAA,EAAAA,IAASD,EAAME,cAAcb,OACxC,EAqBQ,UAAQ,cAAa,SAEpBF,EAAagB,KAAI,gBAAGf,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OAClC,mBAAiBD,MAAOA,EAAM,SAAEC,GAAnBF,EAAiC,WAM1D,EChDA,aAAe,OAAM,SAAC,EAAY,GAAG,C","sources":["components/calculatorFC/buttonFC/index.jsx","components/controlPanel/styles.js","constants/themeOptions.js","components/controlPanel/index.jsx","pages/settings/index.jsx"],"sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ButtonStyled } from '@components/containers';\n\nexport const Button = ({ title, handleClick }) => (\n  <ButtonStyled onClick={handleClick}>\n    {title}\n  </ButtonStyled>\n);\n\nButton.propsType = {\n  title: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n","import styled from 'styled-components';\r\n\r\nimport { fontSize, border, height, radius, column } from '@styles/theme';\r\n\r\nexport const SettingsContainer = styled.div`\r\n  padding: 20px;\r\n  height: ${height.settings.basic}px;\r\n  background-color: ${({ theme }) => theme.color.background};\r\n  border: ${({ theme }) => `${border.b1}px solid ${theme.color.border}`};\r\n\r\n  @media (max-width: 767.98px) {\r\n    height: ${height.settings.small}px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: ${fontSize.fz20}px;\r\n  text-align: left;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const SettingsGroup = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${column.settings.basic};\r\n  gap: 30px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    grid-template-columns: ${column.settings.small};\r\n  }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  border: ${({ theme }) => `${border.b2}px solid ${theme.color.border}`};\r\n  border-radius: ${radius.r5}px;\r\n  font-size: ${fontSize.fz16}px;\r\n  padding: 7px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    option {\r\n      font-size: ${fontSize.fz16}px;\r\n    }\r\n  }\r\n`;\r\n","export const themeOptions = [\r\n  {id: 1, value: 'light', name: 'Light theme'},\r\n  {id: 2, value: 'colored', name: 'Colored theme'},\r\n  {id: 3, value: 'dark', name: 'Dark theme'},\r\n];\r\n","import React from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button } from '@components/calculatorFC/buttonFC';\r\nimport { Select, SettingsContainer, SettingsGroup, Title } from '@components/controlPanel/styles';\r\nimport { themeOptions } from '@constants/themeOptions';\r\nimport { changeVisibleHistory, clearAll, setTheme } from '@store/actions';\r\nimport { selectIsShow, selectTheme } from '@store/selectors';\r\n\r\nconst ControlPanel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const theme = useSelector(selectTheme);\r\n  const isShow = useSelector(selectIsShow);\r\n\r\n  const onClearAllHandler = () => {\r\n    dispatch(clearAll());\r\n  };\r\n\r\n  const onChangeThemeHandler = event => {\r\n    dispatch(setTheme(event.currentTarget.value));\r\n  };\r\n\r\n  const onIsShowHandler = () => {\r\n    dispatch(changeVisibleHistory(!isShow));\r\n  };\r\n\r\n  return (\r\n    <SettingsContainer data-cy=\"settings\">\r\n      <Title>Settings</Title>\r\n      <SettingsGroup>\r\n        <Button\r\n          title=\"Clear All History\"\r\n          handleClick={onClearAllHandler}\r\n        />\r\n        <Button\r\n          title={`${isShow ? 'Close' : 'Show'} history`}\r\n          handleClick={onIsShowHandler}\r\n        />\r\n        <Select\r\n          value={theme}\r\n          onChange={onChangeThemeHandler}\r\n          data-cy=\"selectTheme\"\r\n        >\r\n          {themeOptions.map(({ id, value, name }) =>\r\n            <option key={id} value={value}>{name}</option>,\r\n          )}\r\n        </Select>\r\n      </SettingsGroup>\r\n    </SettingsContainer>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\n\nimport ControlPanel from '@components/controlPanel';\n\nexport default () => <ControlPanel />;\n"],"names":["Button","title","handleClick","onClick","propsType","PropTypes","SettingsContainer","styled","height","theme","color","background","border","Title","fontSize","SettingsGroup","column","Select","radius","themeOptions","id","value","name","dispatch","useDispatch","useSelector","selectTheme","isShow","selectIsShow","clearAll","changeVisibleHistory","onChange","event","setTheme","currentTarget","map"],"sourceRoot":""}