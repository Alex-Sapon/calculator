{"version":3,"file":"static/js/354.c7cd8656.chunk.js","mappings":"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","sources":["components/calculatorCC/displayCC/index.jsx","components/calculatorCC/historyCC/index.jsx","components/calculatorCC/keyCC/index.jsx","components/calculatorCC/keypadCC/index.jsx","components/calculatorCC/index.jsx","pages/homeCC/index.jsx"],"sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { DisplayHistory, DisplayMain, Expression } from '@components/containers';\nimport { numberWithCommas } from '@helpers';\nimport { selectExpression, selectResult, selectValue } from '@store/selectors';\n\nclass DisplayComponent extends React.Component {\n  render() {\n    const { value, expression, result } = this.props;\n\n    return (\n      <React.Fragment>\n        <DisplayHistory>\n          <Expression>{expression}</Expression>\n        </DisplayHistory>\n        <DisplayMain>{value || result}</DisplayMain>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  value: numberWithCommas(selectValue(state)),\n  expression: numberWithCommas(selectExpression(state)),\n  result: numberWithCommas(selectResult(state)),\n});\n\nexport const Display = connect(mapStateToProps, null)(DisplayComponent);\n\nDisplayComponent.propTypes = {\n  value: PropTypes.string.isRequired,\n  expression: PropTypes.string.isRequired,\n  result: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { HistoryList, HistoryItem, Title } from '@components/containers';\n\nclass HistoryComponent extends React.Component {\n  render() {\n    const { history } = this.props;\n\n    return (\n      <React.Fragment>\n        <Title>History</Title>\n        <HistoryList>\n          {history.map(({ id, historyItem }) =>\n            <HistoryItem key={id}>{historyItem}</HistoryItem>,\n          )}\n        </HistoryList>\n      </React.Fragment>\n    );\n  }\n}\n\nHistoryComponent.propTypes = {\n  history: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      historyItem: PropTypes.string,\n    }),\n  ),\n};\n\nHistoryComponent.defaultProps = {\n  history: [],\n};\n\nconst mapStateToProps = state => ({\n  history: state.calculator.history,\n});\n\nexport const History = connect(mapStateToProps, null)(HistoryComponent);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { KeyStyled } from '@components/containers';\n\nexport class Key extends React.PureComponent {\n  render() {\n    const { innerText } = this.props;\n\n    return (\n      <KeyStyled>{innerText}</KeyStyled>\n    );\n  }\n}\n\nKey.propsType = {\n  innerText: PropTypes.string,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Key } from '@components/calculatorCC/keyCC';\nimport { KeypadContainer } from '@components/containers';\nimport { operations } from '@constants/operations';\nimport { keypadHandler } from '@helpers/keypadHandler';\nimport { \n  selectExpression, \n  selectOperation, \n  selectResult, \n  selectTempResult, \n  selectValue,\n} from '@store/selectors';\n\nclass KeypadComponent extends React.Component {\n  handleClick = event => {\n    const { onKeypadClick, value, expression, operation, tempResult, result } = this.props;\n    onKeypadClick(event, value, expression, operation, tempResult, result);\n  };\n\n  render() {\n    return (\n      <KeypadContainer onClick={this.handleClick}>\n        {operations.map(({ id, innerText }) =>\n          <Key\n            key={id}\n            innerText={innerText}\n          />,\n        )}\n      </KeypadContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  value: selectValue(state),\n  expression: selectExpression(state),\n  operation: selectOperation(state),\n  tempResult: selectTempResult(state),\n  result: selectResult(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onKeypadClick: (event, value, expression, operation, tempResult, result) => {\n    keypadHandler(event, value, expression, operation, tempResult, result, dispatch);\n  },\n});\n\nexport const Keypad = connect(mapStateToProps, mapDispatchToProps)(KeypadComponent);\n\nKeypadComponent.propsType = {\n  value: PropTypes.func,\n  expression: PropTypes.string,\n  operation: PropTypes.string,\n  tempResult: PropTypes.string,\n  result: PropTypes.string,\n  onKeypadClick: PropTypes.func,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Display } from '@components/calculatorCC/displayCC';\nimport { History } from '@components/calculatorCC/historyCC';\nimport { Keypad } from '@components/calculatorCC/keypadCC';\nimport { Container, HistoryContainer, LeftSide, RightSide } from '@components/containers';\n\nclass CalculatorClass extends React.Component {\n  render() {\n    const { isShow } = this.props;\n\n    return (\n      <Container>\n        <LeftSide>\n          <Display />\n          <Keypad />\n        </LeftSide>\n        <RightSide>\n          <HistoryContainer>\n            {isShow ? <History /> : null}\n          </HistoryContainer>\n        </RightSide>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isShow: state.application.isShow,\n});\n\nCalculatorClass.propsType = {\n  isShow: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps, null)(CalculatorClass);\n","import React from 'react';\n\nimport CalculatorClass from '@components/calculatorCC';\n\nclass CalculatorCC extends React.Component {\n  render() {\n    return (\n      <CalculatorClass />\n    );\n  }\n}\n\nexport default CalculatorCC;\n"],"names":["DisplayComponent","this","props","value","expression","result","React","Display","connect","state","numberWithCommas","selectValue","selectExpression","selectResult","HistoryComponent","history","map","id","historyItem","defaultProps","History","calculator","Key","innerText","propsType","PropTypes","KeypadComponent","handleClick","event","onKeypadClick","operation","tempResult","onClick","operations","Keypad","selectOperation","selectTempResult","dispatch","keypadHandler","CalculatorClass","isShow","application","CalculatorCC"],"sourceRoot":""}